<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/skeleton/2.0.4/skeleton.css"
    />
    <title>Weather Dashboard</title>
  </head>
  <body>
    <a href="/users/logout">Logout</a>

    <h1>Weather Dashboard</h1>
    <p>Hello <%= user.charAt(0).toUpperCase() + user.slice(1) %></p>

    <form action="" method="POST">
      <div>
        <input type="text" name="city-name" id="city-name" />
        <input type="submit" name="search" id="search" />
      </div>
    </form>

    <!-- Add this in your weatherDashboard.ejs where appropriate -->
    <button onclick="getLocation()">Use My Location</button>
    <div>
      <% if (weatherInfo) { %>
      <p>Description: <%= weatherInfo.description %></p>
      <p>Temperature: <%= weatherInfo.temp %>°C</p>
      <p>Feels like: <%= weatherInfo.tempFeel %>°C</p>
      <% } else { %> <% } %>
    </div>
    <div>
      <p id="description"></p>
      <p id="temp"></p>
      <p id="temp_feels_like"></p>
    </div>
  </body>

  <div class="history">
    <p>This is where history will be shown</p>
  </div>

  <script>
    const description = document.getElementById("description");
    const temp = document.getElementById("temp");
    const temp_feels_like = document.getElementById("temp_feels_like");

    function getLocation() {
      if (navigator.geolocation) {
        navigator.geolocation.getCurrentPosition((position) => {
          const lat = position.coords.latitude;
          const lon = position.coords.longitude;

          console.log(`latitude is ${lat} and longitude is ${lon}`);

          const data = { lat, lon };
          const options = {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          };
          fetch("/api", options)
            .then((res) => res.json())
            .then((data) => {
              description.innerText = data.weatherInfo.description;
              temp.innerText = data.weatherInfo.temp;
              temp_feels_like.innerText = data.weatherInfo.tempFeel;
            });
        });
      } else {
        alert("Geolocation is not supported by this browser!");
      }
    }
  </script>
</html>
